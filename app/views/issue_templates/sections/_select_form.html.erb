<% values = (form.object && form.object.text.present?) ? form.object.text.split(';') : [] %>
<% default_values = (form.object && form.object.placeholder.present?) ? form.object.placeholder.split(';') : [] %>

<% icon_names = (form.object && form.object.icon_name.present?) ? form.object.icon_name.split(';') : [] %>

<% empty_value = (form.object && form.object.empty_value.present?) ? form.object.empty_value.split(';') : [] %>
<%= issue_template_section_form(form, IssueTemplateSectionSelect, template) do %>
  <p>
    <%= form.text_field :title,
                        :placeholder => "Titre",
                        :label => 'Liste de valeurs',
                        :size => 45,
                        :required => true
    %>
  </p>
  <div class="collapsible">
    <%= render partial: "issue_templates/sections/section_id", locals: {section: form.object} %>
    <p>
      <%= form.text_field :description, :placeholder => "Description", label: "Description", :size => 80 %>
    </p>
    <p>
      <%= form.select :select_type,
                      options_for_select(IssueTemplateSectionSelect.select_types_options,
                                         selected: (form.object.present? ? form.object.select_type : '')),
                      { label: "Type" }, { class: "classic-select select-type" } %>
      <span class="span-icons">
        <%= link_to 'Liste des icones compatibles', 'https://octicons.github.com', target: '_blank' %>
      </span>
    </p>
    <div class="possible-values">
      <label>Valeurs possibles<span class="required"> *</span></label>
      <ul>
        <% if values.length >= icon_names.length %>

          <% values.each_with_index  do |value, key| %> 
            <!-- Use an empty string if the index does not exist in icon_names -->
            <% icon_name = icon_names[key] || '' %>
            <%= render 'issue_templates/sections/select_possible_value', value: values[key], default_values: default_values, empty_value: empty_value, icon_name: icon_names[key] %>
          <% end %>
        <% else %>
          <% icon_names.each_with_index do |icon_name, key| %>
            <!-- Use an empty string if the index does not exist in values -->
            <% value = values[key] || '' %> 
            <%= render 'issue_templates/sections/select_possible_value', value: value, default_values: default_values, empty_value: empty_value, icon_name: icon_name %>
          <% end %>
        <% end %>  
      </ul>
      <%= link_to 'Ajouter une valeur', '#', class: 'add_possible_value' %>
    </div>

    <%= form.hidden_field :text, class: 'text' %>
    <!-- save selected values in the column placeholder -->
    <%= form.hidden_field :placeholder, class: "placeholder" %>
    <!-- save read only values in the column empty_value -->
    <%= form.hidden_field :empty_value, class: "empty_value", label: "", :size => 80 %>
    <!-- save icons values in the column icon_name -->
    <%= form.hidden_field :icon_name, class: "icon_name", label: "", :size => 80 %>

    <p>
      <%= form.select :display_mode,
                      options_for_select(IssueTemplateSection::DISPLAY_MODES.collect { |mode| [l(mode), mode] },
                                         selected: (form.object.present? ? form.object.display_mode : '')),
                      { label: l('display_mode') }, { class: "classic-select" } %>
      <span><i>Option active uniquement pour les champs de type "Checkbox"</i></span>
    </p>
  </div>
<% end %>
